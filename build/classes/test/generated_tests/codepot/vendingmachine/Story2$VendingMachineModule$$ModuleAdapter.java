// Code generated by dagger-compiler.  Do not edit.
package codepot.vendingmachine;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class Story2$VendingMachineModule$$ModuleAdapter extends ModuleAdapter<Story2.VendingMachineModule> {
  private static final String[] INJECTS = { };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public Story2$VendingMachineModule$$ModuleAdapter() {
    super(codepot.vendingmachine.Story2.VendingMachineModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, true /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, Story2.VendingMachineModule module) {
    bindings.contributeProvidesBinding("java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>", new ProductStorageServiceNotifiersProvidesAdapter(module));
  }

  /**
   * A {@code Binding<java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProductStorageServiceNotifiersProvidesAdapter extends ProvidesBinding<java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>>
      implements Provider<java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>> {
    private final Story2.VendingMachineModule module;

    public ProductStorageServiceNotifiersProvidesAdapter(Story2.VendingMachineModule module) {
      super("java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>", IS_SINGLETON, "codepot.vendingmachine.Story2.VendingMachineModule", "productStorageServiceNotifiers");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier>>}.
     */
    @Override
    public java.util.List<codepot.vendingmachine.infrastructure.notifiers.ServiceNotifier> get() {
      return module.productStorageServiceNotifiers();
    }
  }
}
